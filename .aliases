#  go back x directories
b() {
    str=""
    count=0
    while [ "$count" -lt "$1" ];
    do
        str=$str"../"
        let count=count+1
    done
    cd $str
}

# Extract almost any archive
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        p7zip -d $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

# Instant server
servedir(){
    python -m SimpleHTTPServer $1
}

shutd(){
    echo  $((date| cut -d' ' -f 1-5 && uptime | cut -d' ' -f 3-5 | cut -d',' -f 1 ) | tr "\n" " ")  >> ~/.uptime.txt
    sudo shutdown -h now
}

wifi(){
    sudo rfkill unblock wifi
    sleep 1
    sudo ifconfig wlan0 down
    sudo macchanger -r wlan0
    sudo ifconfig wlan0 up
    sudo service wicd start
    wicd-curses
}

# Clear terminal
alias c="clear"

alias clip="xclip -selection clipboard"
alias burn="shred -n 3 -u "
alias monitor="xrandr --output HDMI1 --mode 1920x1200 --left-of eDP1"
alias monitor2="xrandr --output LVDS1 --mode 1024x600; xrandr --output VGA1 --mode 1920x1080 --left-of LVDS1"

# Common typo
alias les="less"

# Open stdout in vim
alias vr="vim -R -"

# Pretty print json
alias json="python -mjson.tool"

# Common programs alias
alias h="fc -l -100000 | grep"
alias less="less -R"
alias ls="ls --color=auto"
alias l="ls"
alias ll="ls -lah"
alias cl="clear; ls"
alias e="emacsclient"

iptv(){
    iptables -v -n --line-numbers -L $@
}

iptvs(){
    ip6tables -v -n --line-numbers -L $@
}

alias alsamixer="alsamixer -c 0"

cse() {
    grep -ir $1 ~/.mcabber/histo/ | sed -e 's/.*000 //'
}

# Unlock remote luks machines
unluks() {
    read -s LUKSPASS
    ssh -l root $1 "echo -ne $LUKSPASS >/lib/cryptsetup/passfifo"
    unset LUKSPASS
}

# Archive emails
archive() {
    DEST=$(dirname ~/Vault/mail/$1)
    archivemail -d 30 -o $DEST $1
}
